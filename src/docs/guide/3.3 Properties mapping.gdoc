You can customize the mapping for each domain properties using the closure mapping.
The syntax is simple:
{code}static searchable = {
    propertyName option1:value, option2:value, ...
}{code}
*Available options*
{table}
*Option name* | *Description*
boost | A decimal boost value. With a positive value, promotes search results for hits in this property; with a negative value, demotes search results that hit this property.
component | To use only on domain (or collection of domains), make the property a searchable component.
converter | A @Class@ to use as a converter during the marshalling/unmarshalling process for that peculiar property. That class must extends the @PropertyEditorSupport@ java class.
excludeFromAll | A boolean, determines if the property is to append in the @"_all"@ field. Default to @true@.
index | How or if the property is made into searchable element. One of @"no"@, @"not_analyzed"@ or @"analyzed"@.
reference | To use only on domain (or collection of domains), make the property a searchable reference.
includeTransients | A boolean indicating whether @transients@ should be included in the mapping.  Alternatively, a list of transient field names to be included in the mapping.
{table}
